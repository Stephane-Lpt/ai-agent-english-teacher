services:
  fastapi_backend:
    build:
      context: ./back  # Path to the FastAPI project
    container_name: fastapi_backend
    ports:
      - "8000:8000"  # Map FastAPI default port
    volumes:
      - ./back:/app  # Sync local code with container
    environment:
      - PYTHONUNBUFFERED=1  # Ensures logs are shown immediately
    stdin_open: true  # Keep container interactive
    tty: true  # Enable terminal interaction
    command: ["uvicorn", "api:app", "--host", "0.0.0.0", "--port", "8000"]

  asr_service:
    image: onerahmet/openai-whisper-asr-webservice:latest-gpu
    container_name: asr_service
    ports:
      - "9000:9000"
    environment:
      - ASR_MODEL=base
      - ASR_ENGINE=openai_whisper

  tts_service:
    image: ghcr.io/coqui-ai/tts
    container_name: tts_service
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]
    ports:
      - "5002:5002"
    entrypoint: /bin/bash
    stdin_open: true
    tty: true
    command: >
      -c "python3 TTS/server/server.py --model_name tts_models/en/vctk/vits"

# IF USING A GPU (CUDA). You need to install the Nvidia container toolkit before running this. Docs: (https://ollama.com/blog/ollama-is-now-available-as-an-official-docker-image#:~:text=ollama%20ollama/ollama-,Nvidia%20GPU,-Install%20the%20Nvidia)
  ollama:
    image: ollama/ollama
    container_name: ollama
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]
    volumes:
      - ollama:/root/.ollama
    ports:
      - "11435:11434"
    entrypoint: /bin/bash
    stdin_open: true
    tty: true
    command: >
     -c "ollama serve && ollama run gemma2:2b"

  postgres:
    image: postgres:latest
    container_name: postgres-container
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=my-secret-pw
      - POSTGRES_DB=mydatabase
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      retries: 3

volumes:
  postgres_data:
  ollama: